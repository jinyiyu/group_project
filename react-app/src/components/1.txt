import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/components/UserForm.jsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("/Users/dailin/Desktop/group_project/react-app/src/components/UserForm.jsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import __vite__cjsImport1_react_jsxDevRuntime from "/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=84598717"; const _jsxDEV = __vite__cjsImport1_react_jsxDevRuntime["jsxDEV"]; const _Fragment = __vite__cjsImport1_react_jsxDevRuntime["Fragment"];
var _s = $RefreshSig$();
import __vite__cjsImport2_react from "/node_modules/.vite/deps/react.js?v=84598717"; const React = __vite__cjsImport2_react.__esModule ? __vite__cjsImport2_react.default : __vite__cjsImport2_react; const useEffect = __vite__cjsImport2_react["useEffect"]; const useState = __vite__cjsImport2_react["useState"];
import { useDispatch, useSelector } from "/node_modules/.vite/deps/react-redux.js?v=84598717";
import { updateDocument } from "/src/store/documentSlice/documentSlice.js";
import { addEmergencyContact, updateField, deleteEmergencyContact } from "/src/store/userSlice/userSlice.js";
const UserForm = ()=>{
    _s();
    const BASE_URL = "http://localhost:3000";
    const optDocOrder = [
        "OPT_receipt",
        "OPT_EAD",
        "I_983",
        "I_20"
    ];
    const [optDoc, setOptDoc] = useState({
        documentType: "OPT_receipt",
        status: "Pending",
        input: 0
    });
    const dispatch = useDispatch();
    const user = useSelector((state)=>state.user);
    const documents = useSelector((state)=>state.document);
    const [showReference, setShowReference] = useState("no");
    const [showDriverLicense, setShowDriverLicense] = useState("no");
    const [other, setOther] = useState("");
    // const [contact, setContact] = useState({
    //   firstName: "",
    //   lastName: "",
    //   middleName: "",
    //   phone: "",
    //   email: "",
    //   relationship: "",
    // });
    useEffect(()=>{
        getVisaStatus();
    }, []);
    useEffect(()=>{
        if (user.onboardStatus == "pending") {
            disableAllInputs();
        }
    });
    useEffect(()=>{
        if (user.driverLicense.number == "" && user.driverLicense.expirationDate == "" && user.driverLicense.licenseCopy == "") {
            setShowDriverLicense("no");
        } else {
            setShowDriverLicense("yes");
        }
    }, [
        user.driverLicense
    ]);
    useEffect(()=>{
        if (Object.values(user.reference).every((value)=>value === "" || value === user.reference._id)) {
            setShowReference("no");
        } else {